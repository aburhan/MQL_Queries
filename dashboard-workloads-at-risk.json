{
  "category": "CUSTOM",
  "dashboardFilters": [],
  "displayName": "Workload Risks",
  "labels": {},
  "mosaicLayout": {
    "columns": 12,
    "tiles": [
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n\n      | filter value.request_bytes == 0 \n| every 1m\n| group_by [resource.pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]"
            }
          },
          "title": "# of pods without memory resources"
        },
        "width": 3,
        "xPos": 3,
        "yPos": 3
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n\n      | filter value.request_cores == 0 \n| every 1m\n| group_by [resource.pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]"
            }
          },
          "title": "# of pods without CPU requested"
        },
        "width": 3,
        "xPos": 9,
        "yPos": 3
      },
      {
        "height": 6,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Best Effort Workload at risk"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 3
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "{ usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/core_usage_time'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | align rate(1m)\n    | every 1m\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_core_usage_time_aggregate: percentile(value.core_usage_time, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_request_cores_mean: mean(value.request_cores)]\n    | filter value_request_cores_mean != 0 }\n| every 1m\n| join\n| filter\n    sub(requested.value_request_cores_mean,\n      usage.value_core_usage_time_aggregate) < 0\n| group_by\n    [resource.cluster_name, resource.location, resource.project_id,\n     metadata.system.top_level_controller_name],\n    [row_count: row_count()]"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Performance risk - containers running above requested for CPU"
        },
        "width": 6,
        "xPos": 6,
        "yPos": 11
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ burstable_workloads_at_risk:\n { usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/core_usage_time'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | align rate(1m)\n    | every 1m\n    | group_by [pod_name],\n        [value_core_usage_time_aggregate: percentile(value.core_usage_time, 70)]\n; burstable:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by [pod_name], [value_request_cores_mean: mean(value.request_cores)]\n    | filter value_request_cores_mean != 0 }\n| every 1m\n| window 3d\n| join\n| filter\n    sub(burstable.value_request_cores_mean,\n      usage.value_core_usage_time_aggregate) < 0\n| group_by [pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| value row_count_sum\n;all_containers: fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n      | group_by [pod_name], [row_count: row_count()]\n      | group_by [], [row_count_sum: sum(row_count)]\n    }   \n    |join\n    | value scale(div(burstable_workloads_at_risk.row_count_sum,all_containers.row_count_sum), '%')\n\n\n   \n"
            }
          },
          "title": "% of pods CPU running above requested"
        },
        "width": 2,
        "xPos": 10,
        "yPos": 1
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "{ usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/used_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | every 1m\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_byte_usage_aggregate: percentile(value.used_bytes, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_request_bytes_mean: mean(value.request_bytes)]\n    | filter value_request_bytes_mean != 0 }\n| every 1m\n| join\n| filter\n    sub(requested.value_request_bytes_mean, usage.value_byte_usage_aggregate)\n    < 0\n| group_by\n    [resource.cluster_name, resource.location, resource.project_id,\n     metadata.system.top_level_controller_name],\n    [row_count: row_count()]\n"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Reliability risk - containers running above requested for memory"
        },
        "width": 6,
        "xPos": 0,
        "yPos": 11
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/core_usage_time'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | align rate(1m)\n    | every 1m\n    | group_by [resource.cluster_name, resource.location, resource.project_id,metadata.system.top_level_controller_name ],\n        [value_core_usage_time_aggregate: percentile(value.core_usage_time, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by [resource.cluster_name, resource.location, resource.project_id,metadata.system.top_level_controller_name ], [value_request_cores_mean: mean(value.request_cores)]\n    | filter value_request_cores_mean != 0 }\n| every 1m\n| join\n| filter\n    sub(requested.value_request_cores_mean,\n      usage.value_core_usage_time_aggregate) < 0\n| group_by [resource.cluster_name, resource.location, resource.project_id,metadata.system.top_level_controller_name ], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| value row_count_sum"
            }
          },
          "title": "CPU - workloads running above requested"
        },
        "width": 3,
        "xPos": 6,
        "yPos": 9
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/used_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | every 1m\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_byte_usage_aggregate: percentile(value.used_bytes, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by\n        [resource.cluster_name, resource.location, resource.project_id,\n         metadata.system.top_level_controller_name],\n        [value_request_bytes_mean: mean(value.request_bytes)]\n    | filter value_request_bytes_mean != 0 }\n| every 1m\n| join\n| filter\n    sub(requested.value_request_bytes_mean, usage.value_byte_usage_aggregate)\n    < 0\n| group_by\n    [resource.cluster_name, resource.location, resource.project_id,\n     metadata.system.top_level_controller_name],\n    [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| value row_count_sum"
            }
          },
          "title": "Memory - workloads running above requested"
        },
        "width": 3,
        "xPos": 0,
        "yPos": 9
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ burstable_workloads_at_risk:\n { usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/used_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | every 1m\n    | group_by [pod_name],\n        [value_byte_usage_aggregate: percentile(value.used_bytes, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by [pod_name], [value_request_bytes_mean: mean(value.request_bytes)]\n    | filter value_request_bytes_mean != 0 }\n| every 1m\n| window 5m\n| join\n| filter\n    sub(requested.value_request_bytes_mean,\n      usage.value_byte_usage_aggregate) < 0\n| group_by [pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n; \nall_containers: fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n      | group_by [pod_name], [row_count: row_count()]\n      | group_by [], [row_count_sum: sum(row_count)]\n    }   \n    |join\n    | value\n    [v_0:\n       scale(\n         div(burstable_workloads_at_risk.row_count_sum,\n           all_containers.row_count_sum),\n         '%')]"
            }
          },
          "title": "% of pods memory running above requested"
        },
        "width": 2,
        "xPos": 8,
        "yPos": 1
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n| { all_containers: align mean_aligner()\n  ; best_effort_containers:\n      group_by 1m, [value_request_bytes_mean: mean(value.request_bytes)]\n      | filter value_request_bytes_mean == 0 }\n| every 1m\n| group_by [resource.pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| join\n| window 5m\n| value\n    [v_0:\n       scale(\n         div(best_effort_containers.row_count_sum,\n           all_containers.row_count_sum),\n         '%')]"
            }
          },
          "title": "% of pods without memory requested"
        },
        "width": 2,
        "xPos": 4,
        "yPos": 1
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter (resource.namespace_name != 'kube-system'\n           && resource.namespace_name != 'istio-system'\n           && resource.namespace_name != 'gatekeeper-system'\n           && resource.namespace_name != 'gke-system')\n| every 1m\n| group_by 1m, [value_request_bytes_mean: mean(value.request_bytes)]\n| every 1m\n| group_by\n    [metadata.system.top_level_controller_name:\n       metadata.system_labels.top_level_controller_name],\n    [value_request_bytes_mean_mean: mean(value_request_bytes_mean)]\n| filter value_request_bytes_mean_mean == 0 "
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Reliability risk - containers without memory requested"
        },
        "width": 6,
        "xPos": 0,
        "yPos": 5
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter (resource.namespace_name != 'kube-system'\n           && resource.namespace_name != 'istio-system'\n           && resource.namespace_name != 'gatekeeper-system'\n           && resource.namespace_name != 'gke-system')\n| group_by 1m, [value_request_cores_mean: mean(value.request_cores)]\n| every 1m\n| group_by\n    [ resource.cluster_name, resource.location, resource.project_id,\n     metadata.system.top_level_controller_name],\n\n| filter value_request_cores_mean_aggregate == 0 "
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Reliability risk - containers without CPU requested"
        },
        "width": 6,
        "xPos": 6,
        "yPos": 5
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n| { all_containers: align mean_aligner()\n  ; best_effort_containers:\n      group_by 1m, [value_request_cores_mean: mean(value.request_cores)]\n      | filter value_request_cores_mean == 0 }\n| every 1m\n| group_by [resource.pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| join\n| window 5m\n| value\n    [v_0:\n       scale(\n         div(best_effort_containers.row_count_sum,\n           all_containers.row_count_sum),\n         '%')]"
            }
          },
          "title": "% of pods without CPU requested"
        },
        "width": 2,
        "xPos": 6,
        "yPos": 1
      },
      {
        "height": 6,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Burstable workload at risk"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 9
      },
      {
        "height": 3,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": " fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | align mean_aligner()\n    | every 1m\n    | group_by [resource.pod_name], [row_count: row_count()]\n    | group_by [], [row_count_sum: sum(row_count)]"
            }
          },
          "title": "Total # of pods analyzed"
        },
        "width": 2,
        "xPos": 2,
        "yPos": 0
      },
      {
        "height": 3,
        "widget": {
          "text": {
            "content": "[Right-size your GKE workloads at scale](Link to Blog)",
            "format": "MARKDOWN"
          },
          "title": "What to see container recommendations?"
        },
        "width": 2,
        "xPos": 0,
        "yPos": 0
      },
      {
        "height": 1,
        "widget": {
          "text": {
            "content": "",
            "format": "RAW"
          },
          "title": "Burstable workloads at risk"
        },
        "width": 4,
        "xPos": 8,
        "yPos": 0
      },
      {
        "height": 1,
        "widget": {
          "text": {
            "content": "",
            "format": "RAW"
          },
          "title": "Best Effort workloads with reliability risk"
        },
        "width": 4,
        "xPos": 4,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n| group_by [project_id, location, cluster_name,metadata.system.top_level_controller_name]\n| filter value_request_bytes_aggregate == 0\n| group_by [], [row_count_sum: row_count()]"
            }
          },
          "title": "# of containers without memory resources"
        },
        "width": 3,
        "xPos": 0,
        "yPos": 3
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter\n    (resource.namespace_name != 'kube-system'\n     && resource.namespace_name != 'istio-system'\n     && resource.namespace_name != 'gatekeeper-system'\n     && resource.namespace_name != 'gke-system')\n| group_by [project_id, location, cluster_name,metadata.system.top_level_controller_name]\n| filter value_request_cores_aggregate == 0\n| group_by [], [row_count_sum: row_count()]"
            }
          },
          "title": "# of containers without CPU resources requested"
        },
        "width": 3,
        "xPos": 6,
        "yPos": 3
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/core_usage_time'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | align rate(1m)\n    | every 1m\n    | group_by [pod_name],\n        [value_core_usage_time_aggregate: percentile(value.core_usage_time, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by [pod_name], [value_request_cores_mean: mean(value.request_cores)]\n    | filter value_request_cores_mean != 0 }\n| every 1m\n| window 3d\n| join\n| filter\n    sub(requested.value_request_cores_mean,\n      usage.value_core_usage_time_aggregate) < 0\n| group_by [pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| value row_count_sum"
            }
          },
          "title": "CPU - pods running above requested"
        },
        "width": 3,
        "xPos": 9,
        "yPos": 9
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "\n { usage:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/used_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | every 1m\n    | group_by [pod_name],\n        [value_byte_usage_aggregate: percentile(value.used_bytes, 70)]\n; requested:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter\n        (resource.namespace_name != 'kube-system'\n         && resource.namespace_name != 'istio-system'\n         && resource.namespace_name != 'gatekeeper-system'\n         && resource.namespace_name != 'gke-system')\n    | group_by [pod_name ], [value_request_bytes_mean: mean(value.request_bytes)]\n    | filter value_request_bytes_mean != 0 }\n| every 1m\n| join\n| filter\n    sub(requested.value_request_bytes_mean,\n      usage.value_byte_usage_aggregate) < 0\n| group_by [pod_name], [row_count: row_count()]\n| group_by [], [row_count_sum: sum(row_count)]\n| value row_count_sum"
            }
          },
          "title": "Memory - pods running above requested"
        },
        "width": 3,
        "xPos": 3,
        "yPos": 9
      }
    ]
  }
}
